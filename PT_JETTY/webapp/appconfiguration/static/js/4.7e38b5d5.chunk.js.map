{"version":3,"sources":["components/Design/utils/Constants.js","components/actions/MouseAction.js","components/actions/MouseController.js","components/Design/DeviceViewer.jsx","components/Design/DeviceToolBar.jsx","resources/icons/processing.svg","components/Design/ControlDetails.jsx","components/Design/Controls.jsx","components/Design/VirtualClient.jsx"],"names":["APIBaseUrl","URLSearchParams","window","location","search","get","BoundsUnit","NAMES","MouseAction","sessionId","_classCallCheck","this","name","startx","starty","endx","endy","startTime","buttonPressed","_createClass","key","value","x","y","actionargs","selection","JSON","stringify","MouseController","action","zoomFactor","event","target","button","naturalHeight","clientHeight","rect","getBoundingClientRect","Math","round","clientX","left","clientY","top","console","log","setStartPosition","DeviceViewer","props","_useState","useState","_useState2","_slicedToArray","snapshotData","setSnapshotData","_useState3","aspect","_useState4","crop","setCrop","_useState5","_useState6","visibleRight","setVisibleRight","_useState7","controlname","_useState8","controlType","setControlType","_useState9","content","_useState10","setContent","_useState11","_useState12","category","setCategory","_useState13","_useState14","setX","_useState15","_useState16","setY","_useState17","_useState18","w","setW","_useState19","_useState20","h","setH","_useState21","_useState22","more","setMore","_useState23","_useState24","disableSave","setDisableSave","_useState25","_useState26","hoverCoordinates","setHoverCoordinates","viewer","useRef","toast","mouseController","useEffect","getScreenshot","onHoverControlCoordinates","selectRegionFrom","add","highlight","reverseHighlight","url","appId","getImages","then","res","data","temp","catch","response","onMouseEvent","handleEvent","current","controlSteps","map","val","bounds","clearAllControls","ctrlKey","onControlSelect","updateParentControlState","performAction","getSelectedControlBounds","coordinates","parseFloat","width","height","right","bottom","isImgProcessing","_jsxs","className","children","_jsx","i18n","t","ProgressBar","mode","style","selectedControlVisible","selectedControlCoordinatesArr","length","cancelCrop","undefined","setEnableCrop","hideSidebar","setRegionFrom","setDragComplete","refreshfields","_Fragment","href","title","onClick","addControl","ReactCrop","onChange","c","dimension","canvas","document","createElement","ctx","getContext","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","cropImageNow","onComplete","ref","src","draggable","alt","onMouseDown","e","el","random","Toast","Sidebar","visible","position","onHide","onSubmit","preventDefault","allSteps","controlObj","type","confidence","stepval","ind","isChecked","push","setControlSteps","axios","put","headers","show","severity","summary","detail","life","refreshControlLabels","handelAddChange","eve","indexOf","i","label","visibility","Button","icon","disabled","DeviceToolBar","_Component","_inherits","_super","_createSuper","_this","call","onNewSelection","handelDeleteImg","currentImage","delete","filterSelection","setState","showDeleteDialog","selectedImageName","confirmmsg","imagename","handelBackupImg","reload","deleteDialogWidget","status","arraymove","arr","fromIndex","toIndex","element","splice","handleOnDragEnd","result","imageArr","imageIdArr","source","index","destination","imageObjArr","thumbnailImages","setImageObjArr","state","createRef","prevProps","_this2","setTimeout","getElementById","scrollIntoView","behavior","block","_this3","confirmdlgmsg","ConfirmDialog","msg","onConfirm","DragDropContext","onDragEnd","ids","Droppable","droppableId","provided","_objectSpread","droppableProps","innerRef","img","imageValue","Object","values","imageId","keys","selectedClass","Draggable","draggableId","tabIndex","draggableProps","dragHandleProps","id","onKeyDown","onKeyPressForAccessible","concat","fontSize","placeholder","Component","ControlDetails","setType","isSimilarControl","selectedControlArr","boundsObj","obj","controlContent","control","saveChanges","defaultValue","showContent","Controls","componentDidUpdate","prevState","getControls","parentSelectedControlArrState","selectedControlsArr","_toConsumableArray","ischeckArr","steps","currVal","vale","indx","scrollViewIndex","scrollToBottom","isAllSimilar","isSimilarControlSelected","setSimilar","setActiveIndex","getcontrolname","isSimilarDisable","isSimilar","similarBox","checked","enableActions","setIndexArray","itemIndex","_activeIndex","activeIndex","toggleMinimized","minimized","onMinimize","updateCheckboxState","checkedArr","updateSingleCheckbox","allClick","isallchecked","selectAllBox","newStepArr","step","stepTypeObjArr","onAllControlSelection","clearAllfromParent","handleDisableSimilar","find","ele","handleCheckbox","clearall","selectedControlIndex","ControlIndex","currentUuid","filteredArray","filter","item","selectedControles","controlName","every","handleViewSimilar","controlStep","similarArr","truncate","str","substring","rejectDelete","toastRef","showDeleteDialogWidget","handelDeleteChange","handleUpdate","selectedControl","err","message","updateControlDetails","addControlEnable","toggleTypeSection","showControlSelection","cancelTypeSection","handleTypeSelectionCheckbox","stepsArr","stepTypes","stepObjArr","selectedSteps","allComponentCheckbox","allComponentChecked","inx","sort","handleAllSelectionCheckbox","resetToDefault","handleExpandAll","expandIndex","handleCollapseAll","isSelectallDisable","stepsContainer","stepsContent","actionNames","bind","_assertThisInitialized","uniqueStepTypes","forEach","sortedTypes","tempArr","stepObj","scrollTop","scrollHeight","svgName","processingClass","SVG_processing","_this4","minimizedClass","htmlFor","stepType","marginLeft","header","accept","reject","defaultChecked","getcontent","getconfidence","getx","gety","geth","getw","handleControlnameChange","handleContentChange","handleConfidenceChange","handleX_CordinateChange","handleY_CordinateChange","handleW_CordinateChange","handleH_CordinateChange","setControlName","completeControl","Accordion","multiple","onTabChange","AccordionTab","onMouseOver","setOnhoverCoordinates","onMouseOut","VirtualClient","updateStateArr","isFromImage","requestImageIds","isProcessed","imgUrl","intervalID","setInterval","getImageDetails","selectedId","imageFocusPoint","clearInterval","setThumbnails","idArr","imageStatus","requestImages","totalImages","processedImagesLength","floor","error","fetchIntialImageList","imgObj","imageIds","idThumbs","thumbnails","_defineProperty","onImgSelection","imageid","clearAll","image","allcontrolCoordinates","allControls","x1","y1","w1","h1","setAppState","setDesignStatetoparent","selectionId","_this$setState2","imagesIndx","imageIdsIndx","clearControls","region","dragComplete","click","actionProcessing","viewerVisibility","appid","React","imageFiles","imageids","formData","FormData","newImageArr","append","postImages","displayValueTemplate","completedImages","appName","trim","onIncomingScreenshot","enableRegionFeature","onTestStepsMinimize","setSwitch"],"mappings":"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","file":"static/js/4.7e38b5d5.chunk.js","sourcesContent":["// Default app\nconst backendPort = new URLSearchParams(window.location.search).get('backendPort') || '7878';\nexport const APIBaseUrl = 'http://localhost:' + backendPort ;\nexport const BoundsUnit = 'px';\n\nexport const Severity = {\n    INFO: 'info',\n    SUCCESS: 'success',\n    WARNING: 'warning',\n    ERROR: 'error'\n}\n\nexport const NAMES = [\n    \"BUTTON\",\n    \"EDIT\",\n    \"CHECKBOX\",\n    \"RADIO_BUTTON\",\n    \"DROPDOWN\",\n    \"LINK\",\n    \"IMAGE\",\n    \"LIST\",\n    \"LIST_ITEM\",\n    \"LABEL\",\n    \"SLIDER\",\n    \"PROGRESS_BAR\",\n    \"TEXTAREA\",\n  ];","export class MouseAction {\n    constructor(sessionId) {\n      this.sessionId = sessionId;\n      this.name = null;\n      this.startx = 0;\n      this.starty = 0;\n      this.endx = 0;\n      this.endy = 0;\n      this.startTime = 0;\n      this.buttonPressed = false;\n    }\n\n    setStartPosition(x, y) {\n      this.startx = x;\n      this.starty = y;\n    }\n\n    setEndPosition(x, y) {\n      this.endx = x;\n      this.endy = y;\n    }\n\n    buildActionArgs() {\n      var actionargs = {\n        x: this.startx,\n        y: this.starty,\n        selection: this.selection\n      }\n      return JSON.stringify(actionargs);\n    }\n}","import { MouseAction } from \"./MouseAction\";\n\nexport class MouseController {\n  constructor(sessionId) {\n    this.action = new MouseAction(sessionId);\n    this.zoomFactor = 1;\n  }\n\n  handleEvent(event, target) {\n    if (event.button !== 0) return null;\n\n    this.action.name = null;\n    this.zoomFactor = (target.naturalHeight / target.clientHeight);\n    let rect = target.getBoundingClientRect();\n\n    // Image relative coordinates\n    let x = Math.round((event.clientX - rect.left) * this.zoomFactor);\n    let y = Math.round((event.clientY - rect.top) * this.zoomFactor);\n    console.log(x,y)\n    \n    \n    this.action.setStartPosition(x, y);\n    // this.action.startTime = new Date().getTime();\n    // this.action.buttonPressed = true;\n    this.action.name = \"click\";\n    if (this.action.name === null) return null;\n    \n    return this.action;\n  }\n}\n\nexport default MouseController;","import React, { useState, useEffect, useRef } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport \"./DeviceViewer.css\";\nimport axios from \"axios\";\nimport { MouseController } from \"../actions/MouseController\";\nimport { ProgressBar } from \"primereact/progressbar\";\nimport { BoundsUnit, NAMES } from \"./utils/Constants\";\nimport { Sidebar } from \"primereact/sidebar\";\nimport { Button } from \"primereact/button\";\nimport { Toast } from \"primereact/toast\";\nimport { getImages } from \"./DesignServices\";\nimport { APIBaseUrl } from \"../../utils/Constants\";\nimport { SpeedDial } from \"primereact/speeddial\";\nimport i18n from \"../../i18n\";\n\nconst DeviceViewer = (props) => {\n  const [snapshotData, setSnapshotData] = useState(null);\n  const [crop, setCrop] = useState({ aspect: 16 / 9 });\n  const [visibleRight, setVisibleRight] = useState(false);\n  const [controlType, setControlType] = useState(props.controlname);\n  const [content, setContent] = useState(props.content);\n  const [category, setCategory] = useState(null);\n  const [x, setX] = useState();\n  const [y, setY] = useState();\n  const [w, setW] = useState();\n  const [h, setH] = useState();\n  const [more, setMore] = useState(false);\n  const [disableSave, setDisableSave] = useState(true);\n  const [hoverCoordinates, setHoverCoordinates] = useState(false);\n  const viewer = useRef(null);\n  const toast = useRef(null);\n  const mouseController = new MouseController(\"01\");\n\n  useEffect(() => {\n    getScreenshot();\n  }, [props.selection]);\n\n  useEffect(() => {\n    setHoverCoordinates(true);\n    if (\n      props.onHoverControlCoordinates.x === 0 &&\n      props.onHoverControlCoordinates.y === 0 &&\n      props.onHoverControlCoordinates.w === 0 &&\n      props.onHoverControlCoordinates.h === 0\n    ) {\n      setHoverCoordinates(false);\n    }\n  }, [props.onHoverControlCoordinates]);\n\n  useEffect(() => {\n    if (props.selectRegionFrom.add) {\n      //setVisibleRight(true);\n      //identifyControlsonDrag(crop, true);\n    } else if (props.selectRegionFrom.highlight) {\n      // identifyControlsonDrag(crop, true);\n    } else if (props.selectRegionFrom.reverseHighlight) {\n      //identifyControlsonDrag(crop, false);\n    }\n  }, [crop]);\n\n  const getScreenshot = () => {\n    if (typeof props.selection !== \"undefined\") {\n      const url =\n        APIBaseUrl +\n        \"/application/\" +\n        props.appId +\n        \"/images/\" +\n        props.selection +\n        \"/screenshot\";\n      getImages(url)\n        .then((res) => {\n          if (res.data) {\n            let temp = \"data:image/png;base64,\" + res.data;\n            setSnapshotData(temp);\n          }\n        })\n        .catch(function (response) {\n          //handle error\n          console.log(response);\n        });\n    }\n  };\n\n  const performAction = (action, event) => {\n    let steps = props.controlSteps;\n    steps.map((val) => {\n      if (\n        action.startx >= val.bounds.x &&\n        action.starty >= val.bounds.y &&\n        action.startx <= val.bounds.x + val.bounds.w &&\n        action.starty <= val.bounds.y + val.bounds.h\n      ) {\n        props.clearAllControls();\n        if (event.ctrlKey) {\n          props.onControlSelect(val, false);\n          props.updateParentControlState(val, false);\n        } else {\n          props.onControlSelect(val, true);\n          props.updateParentControlState(val, true);\n        }\n      }\n    });\n  };\n\n  const onMouseEvent = (event) => {\n    let action = mouseController.handleEvent(event, viewer.current);\n    if (action !== null) {\n      action.selection = props.selection;\n      performAction(action, event);\n    }\n  };\n\n  const getSelectedControlBounds = (coordinates) => {\n    if (viewer.current === null) return {};\n    let zoomFactor = viewer.current.naturalHeight / viewer.current.clientHeight;\n    let bounds = {};\n    var x = parseFloat(coordinates.x);\n    var y = parseFloat(coordinates.y);\n    var w = parseFloat(coordinates.w);\n    var h = parseFloat(coordinates.h);\n    bounds.width = w / zoomFactor + BoundsUnit;\n    bounds.height = h / zoomFactor + BoundsUnit;\n    bounds.left = x / zoomFactor + BoundsUnit;\n    bounds.top = y / zoomFactor + BoundsUnit;\n    delete bounds.right;\n    delete bounds.bottom;\n    return bounds;\n  };\n\n  if (props.isImgProcessing === true) {\n    return (\n      <div className=\"prorgressbar\">\n        <h3>{i18n.t('device-viewer.loader')}</h3>\n        <ProgressBar\n          mode=\"indeterminate\"\n          style={{ height: \"6px\" }}\n        ></ProgressBar>\n      </div>\n    );\n  }\n  let selectedControlVisible = true;\n  if (props.selectedControlCoordinatesArr.length === 0) {\n    selectedControlVisible = false;\n  }\n\n  const cropImageNow = (dimension) => {\n    const canvas = document.createElement(\"canvas\");\n    let zoomFactor = viewer.current.naturalHeight / viewer.current.clientHeight;\n    var x = parseFloat(dimension.x) * zoomFactor;\n    var y = parseFloat(dimension.y) * zoomFactor;\n    var w = parseFloat(dimension.width) * zoomFactor;\n    var h = parseFloat(dimension.height) * zoomFactor;\n\n    // const scaleX = viewer.current.naturalWidth / viewer.current.width;\n    // const scaleY = viewer.current.naturalHeight / viewer.current.height;\n    canvas.width = dimension.width;\n    canvas.height = dimension.height;\n    const ctx = canvas.getContext(\"2d\");\n\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = dimension.width * pixelRatio;\n    canvas.height = dimension.height * pixelRatio;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = \"high\";\n    setX(x);\n    setY(y);\n    setW(w);\n    setH(h);\n  };\n\n  const cancelCrop = () => {\n    setCrop(undefined);\n    props.setEnableCrop(false);\n  };\n\n  const identifyControlsonDrag = (bounds, isFromDrag = isFromDrag || true) => {\n    let steps = props.controlSteps;\n    let zoomFactor = viewer.current.naturalHeight / viewer.current.clientHeight;\n    // Image relative coordinates\n    let x = bounds.x * zoomFactor;\n    let y = bounds.y * zoomFactor;\n    let w = bounds.width * zoomFactor;\n    let h = bounds.height * zoomFactor;\n    if (isFromDrag) {\n      steps.map((val) => {\n        if (\n          val.bounds.x >= x &&\n          val.bounds.y >= y &&\n          val.bounds.x + val.bounds.w <= x + w &&\n          val.bounds.y + val.bounds.h <= y + h\n        ) {\n          props.onControlSelect(val);\n          props.updateParentControlState(val);\n        }\n      });\n    } else {\n      let newStepsControls = [];\n      newStepsControls = steps.filter((step) => {\n        if (step.isChecked === false) {\n          return step;\n        }\n      });\n      props.onAllControlSelection(newStepsControls);\n      cancelCrop();\n      steps.map((step) => {\n        if (step.isChecked === true) {\n          step.isChecked = false;\n        }\n      });\n      props.setControlSteps(steps);\n    }\n  };\n\n  const items = [\n    {\n      label: \"Add\",\n      icon: \"pi pi-plus-circle\",\n      command: () => {\n        setVisibleRight(true);\n      },\n    },\n    {\n      label: \"Select other controls\",\n      icon: \"pi pi-arrow-right-arrow-left\",\n      command: () => {\n        identifyControlsonDrag(selectedBounds, false);\n      },\n    },\n    {\n      label: \"Cancel\",\n      icon: \"pi pi-times-circle\",\n      command: () => {\n        cancelCrop();\n      },\n    },\n  ];\n\n  const cropComponent = () => (\n    <SpeedDial\n      model={items}\n      direction=\"down\"\n      style={{ right: \"-32px\", top: \"6px\" }}\n    />\n  );\n\n  const handelAddChange = () => {\n    let allSteps = props.controlSteps;\n    let controlObj = {\n      type: controlType,\n      content: content,\n      confidence: \"100.0\",\n      category: category,\n      bounds: {\n        x: Math.round(x),\n        y: Math.round(y),\n        w: Math.round(w),\n        h: Math.round(h),\n      },\n    };\n    allSteps.map((stepval, ind) => {\n      delete stepval.isChecked;\n    });\n    allSteps.push(controlObj);\n    props.setControlSteps(allSteps);\n    const url =\n      APIBaseUrl +\n      \"/application/\" +\n      props.appId +\n      \"/images/\" +\n      props.selection +\n      \"/labels\";\n    axios\n      .put(url, allSteps, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"if-Match\": \"abcd\",\n        },\n      })\n      .then((res) => {\n        toast.current.show({\n          severity: \"info\",\n          summary: \"Confirmed\",\n          detail: i18n.t('device-viewer.control-create-success-msg'),\n          life: 3000,\n        });\n        props.refreshControlLabels();\n        refreshfields();\n        setVisibleRight(false);\n        cancelCrop();\n      });\n  };\n\n  const handleAddDetailsSubmit = (e) => {\n    e.preventDefault();\n    handelAddChange();\n  };\n\n  const settingType = (eve) => {\n    setControlType(eve.target.value);\n    setCategory(NAMES.indexOf(eve.target.value));\n  };\n\n  const settingContent = (eve) => {\n    setContent(eve.target.value);\n  };\n\n  const highlightControls = () => {\n    let region = {\n      add: false,\n      highlight: true,\n      reverseHighlight: false,\n    };\n    props.setRegionFrom(region);\n    props.setEnableCrop(true);\n  };\n\n  const highlightReverseControls = () => {\n    let region = {\n      add: false,\n      highlight: false,\n      reverseHighlight: true,\n    };\n    props.setRegionFrom(region);\n    props.setEnableCrop(true);\n  };\n\n  const hideSidebar = () => {\n    let region = {\n      add: false,\n      highlight: false,\n      reverseHighlight: false,\n    };\n    props.setRegionFrom(region);\n    setVisibleRight(false);\n    props.setEnableCrop(false);\n    setCrop(undefined);\n    props.setDragComplete(false);\n  };\n\n  const refreshfields = () => {\n    setContent(null);\n    setCategory(null);\n    setX(null);\n    setY(null);\n    setH(null);\n    setW(null);\n  }\n  \n\n  return (\n    <>\n      <div className=\"highlight-items\">\n        <div className=\"item\">\n          <a\n            href=\"#\"\n            className=\"highlight\"\n            title=\"Highlight controls\"\n            onClick={() => highlightControls()}\n          >\n            <i className=\"pi pi-eye\"></i>\n          </a>\n        </div>\n        <div className=\"item\">\n          <a\n            href=\"#\"\n            className=\"highlight-reverse\"\n            title=\"Highlight reverse controls\"\n            onClick={() => highlightReverseControls()}\n          >\n            <i className=\"pi pi-arrow-right-arrow-left\"></i>\n          </a>\n        </div>\n        <div className=\"item\">\n          <a\n            href=\"#\"\n            className=\"Cancel\"\n            title=\"Cancel selection\"\n            onClick={hideSidebar}\n          >\n            <i className=\"pi pi-times-circle\"></i>\n          </a>\n        </div>\n      </div>\n      <div className=\"dv\">\n        <div className=\"dv-content\">\n          {props.selection && snapshotData && (\n            <>\n              {props.addControl ? (\n                <center>\n                  {!!snapshotData && (\n                    <>\n                      <ReactCrop\n                        crop={crop}\n                        onChange={(c) => {\n                          cropImageNow(c);\n                          setCrop(c);\n                        }}\n                        onComplete={() => setVisibleRight(true)}\n                      >\n                        <img\n                          ref={viewer}\n                          src={snapshotData}\n                          draggable=\"false\"\n                          alt=\"viewer image\"\n                        />\n                      </ReactCrop>\n                    </>\n                  )}\n                </center>\n              ) : (\n                <>\n                  {!!snapshotData && (\n                    <>\n                      <img\n                        ref={viewer}\n                        src={snapshotData}\n                        draggable=\"false\"\n                        onMouseDown={(e) => {\n                          onMouseEvent(e);\n                        }}\n                        alt=\"viewer image\"\n                      />\n                    </>\n                  )}\n                </>\n              )}\n            </>\n          )}\n          {selectedControlVisible &&\n            props.selectedControlCoordinatesArr.map((el) => (\n              <div\n                className=\"dv-selected-control\"\n                key={Math.random()}\n                style={getSelectedControlBounds(el)}\n              />\n            ))}\n          {hoverCoordinates && (\n            <div\n              className=\"dv-selected-control-hover\"\n              key={Math.random()}\n              style={getSelectedControlBounds(props.onHoverControlCoordinates)}\n            />\n          )}\n        </div>\n        <Toast ref={toast} />\n        <Sidebar\n          visible={visibleRight}\n          position=\"right\"\n          onHide={() => hideSidebar()}\n        >\n          <div className=\"cd-container\">\n            <form className=\"form\" onSubmit={handleAddDetailsSubmit}>\n              <div className=\"control-type d-flex\">\n                <label className=\"l-controlname\">{i18n.t('device-viewer.type')} </label>\n                <select\n                  className=\"controlname-input\"\n                  onChange={(e) => {settingType(e), setDisableSave(false)}}\n                >\n                  <option name=\"\" value={0}>\n                  {i18n.t('device-viewer.select-control')}\n                  </option>\n                  {NAMES.map((c, i) => (\n                    <option key={i} value={c}>\n                      {c}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <>\n                <div className=\"control-content d-flex\">\n                  <label className=\"l-content\">{i18n.t('device-viewer.content')} </label>\n                  <input\n                    type=\"text\"\n                    label=\"Control Content\"\n                    className=\"content-input\"\n                    onChange={(e) => {settingContent(e)}}\n                    value={content}\n                  />\n                </div>\n                <div className=\"moreLink\" onClick={() => setMore(!more)}>\n                  {more ? \"show less\" : \"show more\"}\n                </div>\n              </>\n              {more && (\n              <div className=\"moreSection\">\n                <div className=\"d-flex coordinates\">\n                  <label className=\"l-content\">{i18n.t('device-viewer.bounds')} </label>\n                  <label className=\"l-x\"> X </label>\n                  <input\n                    type=\"text\"\n                    className=\"x-input\"\n                    value={Math.round(x)}\n                    onChange={(e) => setX(e.target.value)}\n                  />\n                  <label className=\"l-y\"> Y </label>\n                  <input\n                    type=\"text\"\n                    className=\"y-input\"\n                    value={Math.round(y)}\n                    onChange={(e) => setY(e.target.value)}\n                  />\n                </div>\n                <div className=\"d-flex coordinates\">\n                  <label className=\"l-content\" style={{ visibility: \"hidden\" }}>\n                    Bounds{\" \"}\n                  </label>\n                  <label className=\"l-w\"> W </label>\n                  <input\n                    type=\"text\"\n                    className=\"w-input\"\n                    value={Math.round(w)}\n                    onChange={(e) => setW(e.target.value)}\n                  />\n                  <label className=\"l-h\"> H </label>\n                  <input\n                    type=\"text\"\n                    className=\"h-input\"\n                    value={Math.round(h)}\n                    onChange={(e) => setH(e.target.value)}\n                  />\n                </div>\n              </div>\n              )}\n              <Button\n                icon=\"pi pi-check\"\n                type=\"submit\"\n                className=\"p-button-raised p-button-rounded save\"\n                label= {i18n.t('device-viewer.save')}\n                disabled = {disableSave}\n              />\n            </form>\n          </div>\n        </Sidebar>\n      </div>\n    </>\n  );\n};\n\nexport default DeviceViewer;\n","import React, { Component, createRef } from \"react\";\nimport \"./DeviceToolBar.css\";\nimport { APIBaseUrl } from \"../../utils/Constants\";\nimport axios from \"axios\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ConfirmDialog from \"../../utils/ConfirmDialog\";\nimport { Toast } from \"primereact/toast\";\nimport \"primeicons/primeicons.css\";\nimport i18n from \"../../i18n\";\n\nexport class DeviceToolBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false\n    };\n    this.toast = createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n      setTimeout(()=>{\n        const element = document.getElementById(this.props.selection);\n        if(element !== null) {\n          element.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n       });\n        }\n      },100);\n  }\n\n  onClick = (name) => {\n    this.props.onNewSelection(name);\n  };\n\n  handelDeleteImg = (currentImage) => {\n    let url =\n      APIBaseUrl +\n      \"/application/\" +\n      this.props.appId +\n      \"/images/\" +\n      this.props.selection;\n    return axios.delete(url).then((res) => {\n      this.props.filterSelection(this.props.selection);\n      this.setState({\n        showDeleteDialog : false\n      });\n      let image = this.props.selectedImageName;\n      let confirmmsg = i18n.t(\"device-toolbar.delete-success-msg\", { imagename :  currentImage });\n      this.toast.current.show({\n        severity: \"warn\",\n        summary: \"Confirmed\",\n        detail: confirmmsg,\n        life: 3000,\n      });\n    });\n  };\n\n  handelBackupImg = () => {\n    const url = APIBaseUrl + \"/\" + this.props.selection + \"/backupnode\";\n    return axios\n      .put(url, {\n        headers: {\n          \"Access-Control-Allow-Headers\":\n            \"origin x-requested-with, content-type\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"*\",\n          \"Content-Type\": \"data\",\n        },\n      })\n      .then((res) => {\n        if (res.data === \"node backup successfull\") {\n          window.location.reload();\n        }\n      });\n  };\n\n  deleteDialogWidget = (status) => {\n    this.setState({ showDeleteDialog: status });\n  };\n\n  arraymove = (arr, fromIndex, toIndex) => {\n    let element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    return arr;\n  };\n\n  handleOnDragEnd = (result, imageArr) => {\n    let imageIdArr = this.arraymove(\n      imageArr,\n      result.source.index,\n      result.destination.index\n    );\n    let imageObjArr = this.arraymove(\n      this.props.thumbnailImages,\n      result.source.index,\n      result.destination.index\n    );\n    this.props.setImageObjArr(imageObjArr);\n    const url =\n      APIBaseUrl + \"/application/\" + this.props.appId + \"/images/order\";\n    return axios\n      .put(url, imageIdArr, {\n        headers: {\n          \"Access-Control-Allow-Headers\":\n            \"origin x-requested-with, content-type\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        this.toast.current.show({\n          severity: \"warn\",\n          summary: \"Confirmed\",\n          detail: i18n.t('device-toolbar.image-order-success'),\n          life: 3000,\n        });\n      });\n  };\n\n  render() {\n    let currentImage = this.props.selectedImageName;\n    let confirmdlgmsg = i18n.t(\"device-toolbar.delete-confirm-msg\", { imagename : \"<b>\" + currentImage + \"</b>\"});\n    return (\n      <div className={\"design-tb\"}>\n        <Toast ref={this.toast} />\n        <ConfirmDialog\n          title={i18n.t(\"device-toolbar.delete-image\")} \n          msg={confirmdlgmsg}\n          icon={true}\n          visible={this.state.showDeleteDialog}\n          onHide={() => this.deleteDialogWidget(false)}\n          onConfirm={() => this.handelDeleteImg(currentImage)}\n        />\n\n        <DragDropContext\n          onDragEnd={(e) => this.handleOnDragEnd(e, this.props.ids)}\n        >\n          <Droppable droppableId=\"droppable\">\n            {(provided) => (\n              <div\n                className={\"design-tb-content\"}\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {this.props.thumbnailImages.map((img, index) => {\n                  let imageValue = Object.values(img)[0];\n                  let imageId = Object.keys(img)[0];\n                  const selectedClass =\n                    this.props.selection === imageId ? \"selected\" : \"\";\n                  return (\n                    <Draggable\n                      key={imageId}\n                      draggableId={imageId}\n                      index={index}\n                      tabIndex=\"-1\"\n                    >\n                      {(provided) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <span className=\"indexNumber\">{index + 1}</span>\n                          <div\n                            className={selectedClass}\n                            id=\"selectedImage\"\n                            onClick={(e) => this.onClick(imageId)}\n                            key={index}\n                            tabIndex=\"0\"\n                            onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}\n                          >\n                            <img\n                              id={imageId}\n                              className=\"thumbnail\"\n                              alt=\"thumbnail image\"\n                              src={`data:image/png;base64,${imageValue}`}\n                            ></img>\n                            <button\n                              type=\"submit\"\n                              className=\"deleteImg\"\n                              onClick={() => this.deleteDialogWidget(true)}\n                              aria-label=\"delete image\"\n                            >\n                              <i\n                                className=\"pi pi-times\"\n                                style={{ fontSize: \"12px\" }}\n                              ></i>\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\nexport default DeviceToolBar;\n","export default __webpack_public_path__ + \"static/media/processing.d89dd7c6.svg\";","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./ControlDetails.css\";\nimport { Button } from \"primereact/button\";\nimport { Toast } from \"primereact/toast\";\nimport { NAMES } from \"./utils/Constants\";\nimport i18n from \"../../i18n\";\n\nconst ControlDetails = (props) => {\n  const [type, setType] = useState(props.type);\n  const [content, setContent] = useState(props.content);\n  const [x, setX] = useState(props.x);\n  const [y, setY] = useState(props.y);\n  const [w, setW] = useState(props.w);\n  const [h, setH] = useState(props.h);\n  const [more, setMore] = useState(false);\n  const toast = useRef(null);\n\n  useEffect(() => {\n    setType(props.type);\n    setContent(props.content);\n    setX(props.x);\n    setY(props.y);\n    setW(props.w);\n    setH(props.h);\n  }, [props.isSimilarControl, props.selectedControlArr]);\n\n  const handleDetailsSubmit = (e) => {\n    e.preventDefault();\n    if (props.selectedControlArr.length === 1) {\n      let boundsObj = {\n        x: parseFloat(x),\n        y: parseFloat(y),\n        w: parseFloat(w),\n        h: parseFloat(h),\n      };\n      let obj = {\n        controlType: type,\n        controlContent: content,\n        id: props.control.id,\n        bounds: boundsObj,\n      };\n      props.saveChanges(obj);\n    } else {\n      let obj = {\n        controlType: type,\n      };\n      props.saveChanges(obj);\n    }\n  };\n\n  return (\n    <>\n      <Toast ref={toast} />\n      <div className=\"cd-container\">\n        <form className=\"form\" onSubmit={handleDetailsSubmit}>\n          <div className=\"control-type d-flex\">\n            <label className=\"l-controlname\">{i18n.t('control-details.type')} </label>\n            <select\n              className=\"controlname-input\"\n              defaultValue={type}\n              onChange={(e) => setType(e.target.value)}\n            >\n              <option name=\"\" value={0}>\n              {i18n.t('control-details.select-control')}\n              </option>\n              {NAMES.map((c, i) => (\n                <option key={i} value={c}>\n                  {c}\n                </option>\n              ))}\n            </select>\n          </div>\n          {props.showContent && (\n            <>\n              <div className=\"control-content d-flex\">\n                <label className=\"l-content\">{i18n.t('control-details.content')} </label>\n                <input\n                  type=\"text\"\n                  label=\"Control Content\"\n                  className=\"content-input\"\n                  defaultValue={content}\n                  onChange={(e) => setContent(e.target.value)}\n                  value={content}\n                />\n              </div>\n              <div className=\"moreLink\" onClick={() => setMore(!more)}>\n                {more ? \"show less\" : \"show more\"}\n              </div>\n            </>\n          )}\n          {more && (\n            <div className=\"moreSection\">\n              <div className=\"d-flex coordinates\">\n                <label className=\"l-content\">{i18n.t('control-details.bounds')} </label>\n                <label className=\"l-x\"> X </label>\n                <input\n                  type=\"text\"\n                  className=\"x-input\"\n                  value={Math.round(x)}\n                  onChange={(e) => setX(e.target.value)}\n                />\n                <label className=\"l-y\"> Y </label>\n                <input\n                  type=\"text\"\n                  className=\"y-input\"\n                  value={Math.round(y)}\n                  onChange={(e) => setY(e.target.value)}\n                />\n              </div>\n              <div className=\"d-flex coordinates\">\n                <label className=\"l-content\" style={{ visibility: \"hidden\" }}>\n                  Bounds{\" \"}\n                </label>\n                <label className=\"l-w\"> W </label>\n                <input\n                  type=\"text\"\n                  className=\"w-input\"\n                  value={Math.round(w)}\n                  onChange={(e) => setW(e.target.value)}\n                />\n                <label className=\"l-h\"> H </label>\n                <input\n                  type=\"text\"\n                  className=\"h-input\"\n                  value={Math.round(h)}\n                  onChange={(e) => setH(e.target.value)}\n                />\n              </div>\n            </div>\n          )}\n          <Button\n            icon=\"pi pi-check\"\n            type=\"submit\"\n            className=\"p-button-raised p-button-rounded save\"\n            label=\"Save\"\n          />\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default ControlDetails;\n","import React, { Component, createRef } from \"react\";\nimport axios from \"axios\";\nimport \"./Controls.css\";\nimport { APIBaseUrl } from \"../../utils/Constants\";\nimport SVG_processing from \"../../resources/icons/processing.svg\";\nimport { Sidebar } from \"primereact/sidebar\";\nimport { ConfirmDialog } from \"primereact/confirmdialog\";\nimport { Accordion, AccordionTab } from \"primereact/accordion\";\nimport { Toast } from \"primereact/toast\";\nimport ControlDetails from \"./ControlDetails\";\nimport i18n from \"../../i18n\";\n\nclass Controls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      steps: [],\n      minimized: false,\n      isallchecked: false,\n      selectedControlIndex: -1,\n      ControlIndex: -1,\n      selectedControlsArr: [],\n      isSimilar: false,\n      isSimilarDisable: true,\n      controlType: [],\n      visibleRight: false,\n      enableActions: false,\n      showContent: true,\n      setControlType: 0,\n      showDeleteDialog: false,\n      stepTypes: [],\n      stepTypeObjArr : [],\n      activeIndex: null,\n      showControlSelection: false,\n      isSelectallDisable : true,\n      allComponentChecked : true,\n      scrollViewIndex: null,\n      clearall: false\n    };\n    this.stepsContainer = null;\n    this.stepsContent = null;\n    this.actionNames = {};\n    this.setVisibleRight = this.setVisibleRight.bind(this);\n    this.toastRef = createRef();\n    this.selectAllBox = createRef();\n    this.similarBox = createRef();\n    this.allComponentCheckbox = createRef();\n  }\n\n  componentDidMount() {\n    this.getControls();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevProps.selection !== this.props.selection) {\n      this.getControls();\n    }\n    if (\n      prevProps.parentSelectedControlArrState !==\n      this.props.parentSelectedControlArrState\n    ) {\n      this.setState({ selectedControlsArr: [] }, () =>\n        this.setState({\n          selectedControlsArr: [\n            ...this.props.parentSelectedControlArrState,\n          ],\n        })\n      );\n      let ischeckArr = this.state.steps;\n      let controlArrState = this.props.parentSelectedControlArrState;\n      controlArrState.map((currVal, ind) => {\n        ischeckArr.map((vale, indx) => {\n          if (vale.id === currVal.id) {\n            vale.isChecked = true;\n            this.setState({ scrollViewIndex: indx });\n          }\n        });\n      });\n      this.setState({ steps: ischeckArr });\n    }\n\n    this.scrollToBottom();\n\n    if (prevState.selectedControlsArr !== this.state.selectedControlsArr) {\n      if (this.state.selectedControlsArr.length > 0) {\n        let isAllSimilar = this.isSimilarControlSelected();\n        this.props.setSimilar(isAllSimilar);\n        this.setActiveIndex(this.props.getcontrolname);\n        if (isAllSimilar) {\n          this.setState({\n            isSimilarDisable: false,\n            setControlType: this.props.getcontrolname,\n          });\n        } else {\n          this.setState({\n            isSimilarDisable: true,\n            setControlType: 0,\n            isSimilar: false\n          });\n          this.similarBox.current.checked = false;\n        }\n        this.setState({\n          enableActions: true,\n        });\n      } else {\n        this.setState({\n          enableActions: false,\n        });\n      }\n\n      if (this.state.selectedControlsArr.length === 1) {\n        this.similarBox.current.checked = false;\n        this.setState({\n          showContent: true,\n        });\n      } else {\n        this.setState({\n          showContent: false,\n        });\n      }\n    }\n\n    if (prevState.scrollViewIndex !== this.state.scrollViewIndex) {\n      setTimeout(()=>{\n        const element = document.getElementById(\"checkbox_\"+this.state.scrollViewIndex);\n        if(element !== null) {\n          element.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n       });\n        }\n      },500);\n    }\n  };\n\n  setActiveIndex(controlType) {\n    let allControlTypes = this.state.stepTypes;\n    allControlTypes.map((val, inx) => {\n      if(controlType === val){\n        this.setIndexArray(inx);\n      }\n    });\n  }\n\n  setIndexArray = (itemIndex) => {\n    let _activeIndex = this.state.activeIndex ? [...this.state.activeIndex] : [];\n    if (_activeIndex.length === 0) {\n        _activeIndex.push(itemIndex);\n    } else {\n        const index = _activeIndex.indexOf(itemIndex);\n        if (index === -1)\n            _activeIndex.push(itemIndex);\n    }\n    this.setState({ activeIndex : _activeIndex });\n}\n\n  getControls() {\n    if (!this.props.selection) return [];\n    const url =\n      APIBaseUrl +\n      \"/application/\" +\n      this.props.appId +\n      \"/images/\" +\n      this.props.selection +\n      \"/labels\";\n    axios\n      .get(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET\",\n          \"Access-Control-Expose-Headers\": \"Etag\",\n        },\n      })\n      .then((response) => {\n        this.setState({\n          steps: response.data,\n          selectedControlIndex: -1,\n          ControlIndex: -1,\n        });\n        if(response.data.length > 1) {\n          this.setState({\n            isSelectallDisable : false\n          })\n        } else {\n          this.setState({\n            isSelectallDisable : true\n          })\n        }\n        const ischeckArr = response.data;\n        let stepTypes = [];\n        ischeckArr.map((vale, ind) => {\n          vale.isChecked = false;\n          let bounds = {\n            x: vale.bounds.x,\n            y: vale.bounds.y,\n            w: vale.bounds.w,\n            h: vale.bounds.h,\n          };\n          vale.bounds = bounds;\n          stepTypes.push(vale.type);\n        });\n        let uniqueStepTypes = [];\n        stepTypes.forEach(function (item) {\n          if (uniqueStepTypes.indexOf(item) < 0) {\n            uniqueStepTypes.push(item);\n          }\n        });\n        let sortedTypes = uniqueStepTypes.sort();\n        this.setState({\n          stepTypes: sortedTypes\n        });\n        let tempArr = []\n        sortedTypes.map((val) => {\n          let stepObj = {}\n          stepObj.name = val;\n          stepObj.isChecked = true;\n          tempArr.push(stepObj);\n        })\n        this.setState({\n          stepTypeObjArr: tempArr\n        });\n        this.setState({ steps: ischeckArr });\n        this.props.setControlSteps(ischeckArr);\n      })\n      .catch(() => {\n        console.log(\"Could not retrieve steps: \" + this.props.selection);\n      });\n  }\n\n  scrollToBottom() {\n    if (this.stepsContent !== null) {\n      this.stepsContent.scrollTop = this.stepsContent.scrollHeight;\n    }\n  }\n\n  toggleMinimized = () => {\n    this.setState({ minimized: !this.state.minimized });\n    this.props.onMinimize(!this.state.minimized);\n  };\n\n  addStep(svgName, label) {\n    let processingClass = svgName === SVG_processing ? \" cntls-processing\" : \"\";\n    return (\n      <div className={\"cntls-step\" + processingClass} title={label}>\n        <span className=\"cntls-step-icon\">\n          <img src={svgName} alt={svgName} />\n        </span>\n        {!this.state.minimized && (\n          <span className=\"cntls-step-label\">{label}</span>\n        )}\n      </div>\n    );\n  }\n\n  updateCheckboxState = (status) => {\n    const checkedArr = this.state.steps;\n    checkedArr.map((val, ind) => {\n      val.isChecked = status;\n    });\n    this.setState({ steps: checkedArr });\n  };\n\n  updateSingleCheckbox = (status, index) => {\n    const checkedArr = this.state.steps;\n    checkedArr.map((val, ind) => {\n      if (index === ind) {\n        val.isChecked = status;\n      }\n    });\n    this.setState({ steps: checkedArr });\n  };\n\n  allClick = (e) => {\n    this.updateCheckboxState(e.target.checked);\n    this.setState({\n      isSimilarDisable: true,\n      isSimilar: false\n    });\n    this.setState({ isallchecked: this.selectAllBox.current.checked });\n    this.similarBox.current.checked = false;\n    if (this.state.isallchecked === false) {\n      let steps = this.state.steps;\n      let newStepArr = [];\n      steps.map((step) => {\n        this.state.stepTypeObjArr.map((type) => {\n          if(step.type === type.name) {\n            if(type.isChecked === true) {\n              step.isChecked = true;\n              newStepArr.push(step);\n            } else {\n              step.isChecked = false;\n            }\n          }\n        });\n      })\n      this.props.onAllControlSelection(newStepArr);\n    } else {\n      this.props.onAllControlSelection(null);\n    }\n  };\n\n  clearAllfromParent = () => {\n    this.props.onAllControlSelection(null);\n    this.setState({\n      isSimilarDisable: true,\n      isallchecked: false\n    });\n    this.selectAllBox.current.checked = false;\n    this.similarBox.current.checked = false;\n    let ischeckArr = this.state.steps;\n    ischeckArr.map((vale, ind) => {\n      vale.isChecked = false;\n    });\n    this.setState({\n      steps: ischeckArr,\n      isSimilar: false,\n      controlType: [],\n      selectedControlsArr: [],\n    });\n    this.props.setSimilar(false);\n  };\n\n  handleDisableSimilar = (control) => {\n    if (this.state.controlType.length === 0) {\n      this.setState({\n        controlType: [...this.state.controlType, control],\n      });\n      this.setState({\n        isSimilarDisable: false,\n      });\n    } else {\n      if (this.state.controlType.find((ele) => ele.name !== control.name)) {\n        this.setState({\n          isSimilarDisable: true,\n        });\n      } else {\n        this.setState({\n          isSimilarDisable: false,\n        });\n      }\n    }\n  };\n\n  handleCheckbox = (e, index) => {\n    this.updateSingleCheckbox(e.target.checked, index);\n    if (e.target.checked) {\n      if (this.state.isSimilar) {\n        this.setState({\n          isSimilar: false,\n        });\n      }\n      this.setState({\n        clearall: false,\n      });\n      this.setState({ selectedControlIndex: index });\n      this.setState({ ControlIndex: index });\n      this.setState({\n        selectedControlsArr: [\n          ...this.state.selectedControlsArr,\n          this.state.steps[index],\n        ],\n      });\n      this.props.onControlSelect(this.state.steps[index]);\n    } else {\n      let currentUuid = this.state.steps[index].id;\n      if (this.state.selectedControlsArr.length > 0) {\n        this.setState({ isallchecked: false });\n        this.selectAllBox.current.checked = false;\n        let filteredArray = this.state.selectedControlsArr.filter(\n          (item) => item.id !== currentUuid\n        );\n        this.setState({ selectedControlsArr: [] }, () =>\n          this.setState({ selectedControlsArr: filteredArray })\n        );\n\n        this.props.onAllControlSelection(filteredArray);\n        if (filteredArray.length === 0) {\n          this.setState({\n            isSimilarDisable: true,\n            controlType: [],\n            selectedControlsArr: [],\n          });\n        }\n      }\n    }\n  };\n\n  isSimilarControlSelected = () => {\n    let selectedControles = this.state.selectedControlsArr;\n    let controlName = selectedControles[0].type;\n    let allPassed = selectedControles.every(function (element) {\n      return element.type === controlName;\n    });\n    return allPassed;\n  };\n\n  handleViewSimilar = (e) => {\n    this.setState({\n      isSimilar: !this.state.isSimilar,\n    });\n    if (this.similarBox.current.checked) {\n      let controlStep = this.state.selectedControlsArr[0];\n      let similarArr = [];\n      this.state.steps.map((val, ind) => {\n        if (controlStep.type === val.type) {\n          similarArr.push(val);\n        }\n      });\n      this.props.onAllControlSelection(similarArr);\n    } else {\n      let ischeckArr = this.state.steps;\n      ischeckArr.map((vale, ind) => {\n        vale.isChecked = false;\n      });\n      this.setState({ steps: ischeckArr });\n      this.props.onAllControlSelection(null);\n      this.setState({\n        isSimilarDisable: true\n      });\n    }\n  };\n\n  truncate = (str) => {\n    if (str !== undefined && str !== null) {\n      return str.length > 35 ? str.substring(0, 35) + \"...\" : str;\n    } else {\n      return \"\";\n    }\n  };\n\n  setVisibleRight = (status) => {\n    this.setState({\n      visibleRight: status,\n    });\n  };\n\n  rejectDelete = () => {\n    this.toastRef.current.show({\n      severity: \"warn\",\n      summary: \"Rejected\",\n      detail: i18n.t('controls.reject-msg'),\n      life: 3000,\n    });\n  };\n\n  showDeleteDialogWidget = (status) => {\n    this.setState({ showDeleteDialog: status });\n  };\n\n  handelDeleteChange = () => {\n    let allSteps = this.state.steps;\n    if (this.selectAllBox.current.checked) {\n      allSteps = [];\n    } else {\n      this.state.selectedControlsArr.map((val, indx) => {\n        allSteps.map((stepval, ind) => {\n          if (stepval.id === val.id) {\n            allSteps.splice(ind, 1);\n          }\n        });\n      });\n    }\n    this.setState({\n      selectedControlsArr: allSteps,\n    });\n    allSteps.map((control, ind) => {\n      return delete control.isChecked;\n    });\n\n    const url =\n      APIBaseUrl +\n      \"/application/\" +\n      this.props.appId +\n      \"/images/\" +\n      this.props.selection +\n      \"/labels\";\n    axios\n      .put(url, allSteps, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"if-Match\": \"abcd\",\n        },\n      })\n      .then((res) => {\n        this.toastRef.current.show({\n          severity: \"info\",\n          summary: \"Confirmed\",\n          detail: i18n.t('controls.delete-success-msg'),\n          life: 3000,\n        });\n        this.getControls();\n        this.clearAllfromParent();\n        this.setState({\n          selectedControlsArr: [],\n        });\n      });\n  };\n\n  handleUpdate = (control) => {\n    let selectedControl = this.state.selectedControlsArr;\n    let allSteps = this.state.steps;\n      selectedControl.map((val) => {\n        allSteps.map((label) => {\n        if (selectedControl.length === 1) {\n          if (label.id === val.id) {\n            label.content = control.controlContent;\n            label.type = control.controlType;\n            label.bounds = control.bounds;\n          }\n        } else {\n          if (label.id === val.id) {\n            val.type = control.controlType;\n          }\n        }\n      });\n    });\n    try {\n      const url =\n        APIBaseUrl +\n        \"/application/\" +\n        this.props.appId +\n        \"/images/\" +\n        this.props.selection +\n        \"/labels\";\n      axios\n        .put(url, allSteps, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"if-Match\": \"abcd\",\n          },\n        })\n        .then((res) => {\n          this.toastRef.current.show({\n            severity: \"info\",\n            summary: \"Confirmed\",\n            detail: i18n.t('controls.update-success-msg'),\n            life: 3000,\n          });\n          this.getControls();\n          this.clearAllfromParent();\n          this.setState({\n            selectedControlsArr: [],\n          });\n\n        });\n    } catch (err) {\n      if (err.response.status === 404) {\n        console.log(\"Resource could not be found!\");\n      } else {\n        console.log(err.message);\n      }\n    }\n    this.setState({\n      selectedControlsArr: selectedControl,\n    });\n    this.setVisibleRight(false);\n  };\n\n  updateControlDetails = () => {\n    if (\n      this.state.selectedControlsArr.length === 1 ||\n      !this.state.isSimilarDisable\n    ) {\n      this.props.onControlSelect(this.state.selectedControlsArr[0]);\n      this.setState({\n        setControlType: this.state.selectedControlsArr[0].type,\n      });\n    }\n    this.setVisibleRight(true);\n  };\n\n  addControlEnable = () => {\n    let region = {\n      add: true,\n      highlight: false,\n      reverseHighlight: false,\n    };\n    this.props.setRegionFrom(region);\n    this.props.setEnableCrop(true);\n  };\n\n  toggleTypeSection = () => {\n    this.setState({\n      showControlSelection : !this.state.showControlSelection\n    })\n  }\n\n  cancelTypeSection = () => { \n    this.setState({\n      showControlSelection : false\n    })\n  }\n\n  handleTypeSelectionCheckbox = (event) => {\n    let stepsArr = this.state.stepTypes;\n    let stepObjArr = this.state.stepTypeObjArr;\n    let controlSteps = this.state.steps;\n    let selectedSteps = this.state.selectedControlsArr;\n    if(!event.target.checked) {\n      stepsArr.map((c, index) => {\n        if(event.target.value === c) {\n          stepsArr.splice(index, 1);\n        }\n      });\n      controlSteps.map((control) => {\n        if(control.type === event.target.value) {\n          control.isChecked = false\n        }\n      });\n      selectedSteps.map((step,inx) => {\n        if(step.type === event.target.value) {\n          selectedSteps = selectedSteps.filter((step) => step.type !== event.target.value)\n        }\n      })\n      this.setState({\n        isSimilarDisable: true,\n        isallchecked: false,\n        activeIndex : null\n      });\n      this.selectAllBox.current.checked = false;\n      this.similarBox.current.checked = false;\n      this.allComponentCheckbox.current.checked = false;\n      this.setState({\n        allComponentChecked : false\n      })\n    } else {\n      this.setState({\n        isallchecked: false,\n      });\n      this.selectAllBox.current.checked = false;\n      stepsArr.push(event.target.value)\n      if(stepsArr.length === stepObjArr.length) {\n        this.allComponentCheckbox.current.checked = true;\n        this.setState({\n          allComponentChecked : true\n        })\n      }\n    }\n    \n    stepObjArr.map((step) => {\n      if(step.name === event.target.value) {\n        step.isChecked = event.target.checked;\n      }\n    });\n\n    this.setState({\n      stepTypes : stepsArr.sort(),\n      stepTypeObjArr : stepObjArr,\n      steps : controlSteps,\n      selectedControlsArr : selectedSteps\n    });\n    this.props.setControlSteps(controlSteps)\n    this.props.onAllControlSelection(selectedSteps);\n  }\n\n  handleAllSelectionCheckbox = (event) => {\n    this.setState({\n      allComponentChecked : event.target.checked\n    })\n    let stepsArr = this.state.stepTypes;\n    let controlSteps = this.state.steps;\n    let stepObjArr = this.state.stepTypeObjArr;\n    if(!event.target.checked) {\n      stepsArr = [];\n      controlSteps.map((control) => {\n          control.isChecked = false\n      });\n      this.props.onAllControlSelection(null);\n      this.setState({\n        isSimilarDisable: true,\n        isallchecked: false,\n        activeIndex : null\n      });\n      this.selectAllBox.current.checked = false;\n      this.similarBox.current.checked = false;\n     \n      this.props.setControlSteps(controlSteps);\n      stepObjArr.map((step) => {\n        step.isChecked = false;\n      });\n      \n    } else {\n      stepObjArr.map((step) => {\n        step.isChecked = true;\n      });\n      this.getControls();\n    }\n    this.setState({\n      stepTypes : stepsArr.sort(),\n      stepTypeObjArr : stepObjArr,\n      steps : controlSteps,\n    });\n  }\n\n  resetToDefault = () => {\n    this.clearAllfromParent();\n    this.setState({\n      clearall : true\n    });\n  }\n\n  handleExpandAll = () => {\n    this.setState({\n      activeIndex : []\n    });\n    let expandIndex = [];\n    this.state.stepTypes.map((val, ind) => {\n      expandIndex.push(ind)\n    });\n    this.setState({\n      activeIndex : expandIndex\n    });\n  }\n\n  handleCollapseAll = () => {\n    this.setState({\n      activeIndex : []\n    });\n  }\n\n  render() {\n    let minimizedClass = this.state.minimized ? \" cntls-minimized\" : \"\";\n    return (\n      <div className=\"cntls\">\n          <div\n            className={\"cntls-container\" + minimizedClass}\n            ref={(el) => (this.stepsContainer = el)}\n          >\n            <div className=\"cntrl-header\">\n              <div className=\"d-flex cntrl-header-items\">\n              <span tabIndex = \"0\" onClick={this.toggleTypeSection} className=\"typeSectionToggle\"\n              onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}>{i18n.t('controls.select-component')} <i className=\"pi pi-chevron-down\"></i></span>  \n                {this.state.showControlSelection && (\n                  <div className=\"selectComponentDiv\">\n                    <span className=\"cancelFIlterComponents\" \n                    tabIndex = \"0\"\n                    onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}\n                    onClick={this.cancelTypeSection}><i className=\"pi pi-times\"></i></span>\n                    {this.state.steps.length > 1 && (\n                      <p>\n                        <input type=\"checkbox\" \n                        name=\"checkbox\" \n                        className=\"component-checkbox\" \n                        id= \"selectAllComponent\" \n                        value= \"All\" \n                        checked = {this.state.allComponentChecked}\n                        ref={this.allComponentCheckbox}\n                        onChange={(e) => this.handleAllSelectionCheckbox(e)}\n                        tabIndex = \"0\"\n                        onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}/>\n                        <label htmlFor = \"selectAllComponent\">All</label>\n                      </p>\n                    )\n                    }\n                    {this.state.stepTypeObjArr.map((stepType, index) => {\n                      return (<p key={index}>\n                        <input type=\"checkbox\" \n                        name=\"checkbox\" \n                        className=\"component-checkbox\" \n                        id= {index} \n                        value={stepType.name} \n                        checked = {stepType.isChecked}\n                        onChange={(e) => this.handleTypeSelectionCheckbox(e)}\n                        tabIndex = \"0\"\n                        onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}/>\n                        <label htmlFor={index}>{stepType.name}</label>\n                      </p>)\n                    })}\n                  </div>\n                )}\n                <div style={{ marginLeft: \"auto\" }}>\n                  <div className=\"item\">\n                    <a\n                      href=\"#\"\n                      className=\"add\"\n                      title=\"Add control\"\n                      onClick={this.addControlEnable}\n                      tabIndex = {0}\n                      onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}\n                    >\n                      <i className=\"pi pi-plus-circle actions\"></i>\n                    </a>\n                  </div>\n                  <div className=\"item\">\n                    <a\n                      href=\"#\"\n                      className={\n                        \"update \" + (this.state.enableActions ? \"\" : \"disabled\")\n                      }\n                      title=\"Edit controls\"\n                      onClick={this.updateControlDetails}\n                      tabIndex = {0}\n                      onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}\n                    >\n                      <i className=\"pi pi-pencil actions\"></i>\n                    </a>\n                  </div>\n                  <div className=\"item\">\n                    <Toast ref={this.toastRef} />\n                    <ConfirmDialog\n                      visible={this.state.showDeleteDialog}\n                      onHide={() => this.showDeleteDialogWidget(false)}\n                      message = {i18n.t('controls.delete-confirm-msg')} \n                      header=\"Confirmation\"\n                      icon=\"pi pi-exclamation-triangle\"\n                      accept={this.handelDeleteChange}\n                      reject={this.rejectDelete}\n                    />\n                    <a\n                      href=\"#\"\n                      className={\n                        \"delete \" + (this.state.enableActions ? \"\" : \"disabled\")\n                      }\n                      title=\"Delete controls\"\n                      onClick={() => this.showDeleteDialogWidget(true)}\n                      onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}\n                    >\n                      <i className=\"pi pi-trash actions\"></i>\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex cntrl-header-items\">\n                <div className=\"item\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"checkbox-style\"\n                    name=\"Id\"\n                    id=\"selectAll\"\n                    onChange={this.allClick}\n                    defaultChecked={this.state.isallchecked}\n                    ref={this.selectAllBox}\n                    disabled = {this.state.isSelectallDisable}\n                    tabIndex = {0}\n                    onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}\n                    aria-label=\"select all\"\n                  />\n                  <span className=\"caption\">{i18n.t('controls.select-all')}</span>\n                </div>\n                <div className=\"item\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"checkbox-style\"\n                    id=\"similar\"\n                    onChange={this.handleViewSimilar}\n                    disabled={this.state.isSimilarDisable}\n                    defaultChecked={this.state.isSimilar}\n                    ref={this.similarBox}\n                    tabIndex = {0}\n                    onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}\n                    aria-label=\"similar\"\n                  />\n                  <span className=\"caption\">{i18n.t('controls.similar')}</span>\n                </div>\n                <div className=\"item clear-link\">\n                  <span\n                    className={\n                      \"clear \" + (this.state.enableActions ? \"\" : \"disabled\")\n                    }\n                    title=\"Clear all checkbox\"\n                    onClick={this.resetToDefault}\n                    disabled={this.state.clearall}\n                    tabIndex = {0}\n                    onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}\n                  >\n                    {i18n.t('controls.clear')}\n                  </span>\n                </div>\n              </div>\n              {this.state.stepTypes.length > 0 && (\n              <div className=\"d-flex cntrl-header-items\">\n                <span className=\"accordion-expand-link\" onClick={this.handleExpandAll} tabIndex = {0} onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}>{i18n.t('controls.expand-all')}</span>\n                <span className=\"accordion-collapse-link\" onClick={this.handleCollapseAll} tabIndex = {0} onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}>{i18n.t('controls.collapse-all')}</span>\n              </div>\n              )}\n            </div>\n            <div className=\"cntls-content\">\n              <div\n                className={\"cntrol-steps\" + minimizedClass}\n                ref={(el) => (this.stepsContent = el)}\n              >\n                <Sidebar visible={this.state.visibleRight} position=\"right\" onHide={() => this.setVisibleRight(false)}>\n                  <div className=\"control-details-section\">\n                    <ControlDetails\n                      type={this.state.setControlType}\n                      content={this.props.getcontent}\n                      confidence={this.props.getconfidence}\n                      x={this.props.getx}\n                      y={this.props.gety}\n                      h={this.props.geth}\n                      w={this.props.getw}\n                      control={this.props}\n                      handleControlnameChange={\n                        this.props.handleControlnameChange\n                      }\n                      handleContentChange={this.props.handleContentChange}\n                      handleConfidenceChange={this.props.handleConfidenceChange}\n                      handleX_CordinateChange={\n                        this.props.handleX_CordinateChange\n                      }\n                      handleY_CordinateChange={\n                        this.props.handleY_CordinateChange\n                      }\n                      handleW_CordinateChange={\n                        this.props.handleW_CordinateChange\n                      }\n                      handleH_CordinateChange={\n                        this.props.handleH_CordinateChange\n                      }\n                      setControlName={this.props.setControlName}\n                      isSimilarControl={this.props.isSimilarControl}\n                      selectedControlArr={this.state.selectedControlsArr}\n                      showContent={this.state.showContent}\n                      completeControl={this.props}\n                      saveChanges={this.handleUpdate}\n                    />\n                  </div>\n                </Sidebar>\n                {this.state.steps.length > 0 && (\n                <Accordion multiple activeIndex = {this.state.activeIndex} onTabChange={(e) => this.setState({ activeIndex: e.index })}>\n                  {this.state.stepTypes.map((stepType, index) => {\n                    return (\n                      <AccordionTab header={stepType} key={index}>\n                        {this.state.steps.map((c, index) => {\n                          {\n                            if (c.type === stepType) {\n                              return (\n                                <div className=\"ctrl-items\" \n                                onMouseOver={() =>\n                                  this.props.setOnhoverCoordinates(\n                                    this.state.steps[index].bounds\n                                  )\n                                }\n                                onMouseOut={() =>\n                                  this.props.setOnhoverCoordinates(null)\n                                }>\n                                  <label\n                                    htmlFor={\"checkbox_\" + index}\n                                    key={index}\n                                  >\n                                    <input\n                                      id={\"checkbox_\" + index}\n                                      type=\"checkbox\"\n                                      className=\"checkbox-style\"\n                                      checked={\n                                        this.state.steps[index].isChecked\n                                      }\n                                      onChange={(e) =>\n                                        this.handleCheckbox(e, index)\n                                      }\n                                      value=\"\"\n                                      onKeyDown={(e) => this.props.onKeyPressForAccessible(e)}\n                                    />\n                                    {this.truncate(c.content)}\n                                  </label>\n                                </div>\n                              );\n                            }\n                          }\n                        })}\n                      </AccordionTab>\n                    );\n                  })}\n                </Accordion>\n                )}\n              </div>\n            </div>\n          </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React, { Component, createRef } from \"react\";\nimport {\n  APIBaseUrl\n} from \"./utils/Constants\";\nimport \"./VirtualClient.css\";\nimport \"../../resources/scss/AppProgressBar.scss\";\nimport DeviceViewer from \"./DeviceViewer\";\nimport { DeviceToolBar } from \"./DeviceToolBar\";\nimport { ProgressBar } from 'primereact/progressbar';\nimport { Toast } from \"primereact/toast\";\nimport Controls from \"./Controls\";\nimport {\n  fetchIntialImageList,\n  postImages,\n  getImageDetails,\n} from \"./DesignServices\";\nimport i18n from \"../../i18n\";\n\nclass VirtualClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actionProcessing: false,\n      viewerVisibility: true,\n      isImgProcessing: \"\",\n      status: \"\",\n      ids: [],\n      selectedId: null,\n      appid: null,\n      imageid: [],\n      selectedControlArr: [],\n      selectedControlCoordinatesArr: [],\n      // control details parameter\n      type: \"\",\n      controlname: [],\n      content: [],\n      confidence: \"\",\n      x1: [],\n      y1: [],\n      w1: [],\n      h1: [],\n      id: [],\n      isSimilarControl: false,\n      controlSteps: [],\n      idThumbs: [],\n      thumbnailImages: [],\n      addControl : false,\n      onHoverControlCoordinates : {x:0, y:0, w:0, h:0},\n      selectRegionFrom : {add: false, highlight: false, reverseHighlight: false},\n      dragComplete : false,\n      selectedImageName : \"\",\n      totalImages: 0,\n      processedImagesLength: 0,\n      imageFocusPoint: 0\n    };\n    this.clearControls = React.createRef();\n    this.toastRef = createRef();\n  }\n\n  updateStateArr = (control, isFromImage) => {\n    if (this.state.selectedControlArr.length > 0 && !isFromImage) {\n      this.setState({\n        selectedControlArr: [...this.state.selectedControlArr, control],\n      });\n    } else {\n      this.setState({\n        selectedControlArr: [control],\n      });\n    }\n  };\n\n  componentDidMount() {\n    if(this.props.imageFiles.length === 0 && this.props.imageids.length === 0) {\n      this.props.setDesignStatetoparent(false);\n    } else {\n      if(this.props.imageFiles.length === 0) {\n        let imageIds = this.props.imageids;\n        this.setState({\n          selectedId : imageIds[0].id,\n          selectedImageName : imageIds[0].name\n        });\n        this.setThumbnails(imageIds);\n        this.setState({ isImgProcessing: \"completed\" });\n        let idArr = [];\n        imageIds.map((imageStatus) => {\n          idArr.push(imageStatus.id);\n          this.requestImages(imageStatus.id);\n        });\n        this.setState({\n          ids: idArr\n        });\n      } else {\n        let imgUrl = APIBaseUrl + \"/application/\" + this.props.appId + \"/images\";\n        var formData = new FormData();\n        let newImageArr = this.props.imageFiles;\n        let imageFocusPoint = this.props.imageids.length;\n        this.setState({\n          imageFocusPoint : imageFocusPoint\n        })\n        for (let i = 0; i <= newImageArr.length-1; i++) {\n          formData.append(\"file\", newImageArr[i]);\n        }\n        postImages(imgUrl, formData)\n          .then((res) => {\n            if (!res.data) {\n              this.requestImageIds(false);\n            } else {\n              this.requestImageIds(true);\n            }\n          })\n          .catch(function (response) {\n            this.requestImageIds(false);\n          });\n      }\n    }\n  }\n\n  requestImageIds = (isProcessed) => {\n    let imgUrl = APIBaseUrl + \"/application/\" + this.props.appId + \"/images\";\n    let intervalID = setInterval(() => {\n     getImageDetails(imgUrl)\n      .then((res) => {\n        this.setState({\n          selectedId : res.data[this.state.imageFocusPoint].id,\n          selectedImageName : res.data[this.state.imageFocusPoint].name\n        });\n        let allCompleted = res.data.every(element => element.status === \"completed\");\n        if(allCompleted){\n          clearInterval(intervalID);\n          this.setThumbnails(res.data);\n          this.setState({ isImgProcessing: \"completed\" });\n          let idArr = [];\n          res.data.map((imageStatus) => {\n            idArr.push(imageStatus.id);\n            this.requestImages(imageStatus.id);\n          });\n          this.setState({\n            ids: idArr\n          });\n          if(!isProcessed){\n            this.toastRef.current.show({\n              severity: \"warn\",\n              detail: i18n.t('virtual-client.cdis-info'),\n              life: 4000,\n            });\n          }\n        } else {\n          this.setState({ isImgProcessing: true });\n          let totalImages = res.data.length - this.state.imageFocusPoint;\n          let processedImages = res.data.filter((ele) => {\n            return ele.status === \"completed\"\n          });\n          let processedImagesLength = processedImages.length - this.state.imageFocusPoint;\n          processedImagesLength = Math.floor((processedImagesLength / totalImages) * 100);\n          this.setState({\n            totalImages: totalImages,\n            processedImagesLength: processedImagesLength\n          });\n        }\n      })\n      .catch(function (error) {\n        this.toastRef.current.show({\n          severity: \"warn\",\n          detail: error.message,\n          life: 4000,\n        });\n        clearInterval(intervalID);\n        setTimeout(() => {\n          location.reload();\n        },5000);\n      });\n    }, 3000);\n  };\n\n   requestImages = (imageId) => {\n    this.setState({\n      thumbnailImages: []\n    });\n      let url =\n      APIBaseUrl +\n        \"/application/\" +\n        this.props.appId +\n        \"/images/\" +\n        imageId +\n        \"/screenshot\";\n      fetchIntialImageList(url).then((res) => {\n      if (res.data) {\n        let imgObj = {};\n        imgObj[imageId] = res.data;\n        this.setState({\n          thumbnailImages: [...this.state.thumbnailImages, imgObj]\n        });\n       let thumbnailImages = this.state.thumbnailImages;\n        let imageIds = this.state.idThumbs;\n        let thumbnails =[];\n        if(imageIds.length === thumbnailImages.length) {\n          imageIds.map( (img) => {\n            let imgObj = {};\n            thumbnailImages.map((ele)=> {\n              if(ele[img.id] !== undefined) {\n                imgObj[img.id] = ele[img.id]\n              }\n            });\n            thumbnails.push(imgObj);\n          })\n          this.setState({\n            thumbnailImages : [],\n            thumbnailImages : thumbnails\n          })\n        }\n      }\n    })\n    .catch(function (response) {\n      //handle error\n      console.log(response);\n      this.toastRef.current.show({\n        severity: \"warn\",\n        detail: error.message,\n        life: 4000\n      });\n    });\n   \n  }\n\n  onImgSelection = (name) => {\n    this.setState({\n      imageid: name,\n      selectedId: name,\n      selectedControlCoordinatesArr: [],\n    });\n    this.clearAll();\n    this.state.idThumbs.map((image)=>{\n      if(name === image.id) {\n        this.setState({\n          selectedImageName: image.name\n        })\n      }\n    })\n  };\n\n  onAllControlSelection = (steps) => {\n    this.setState({ selectedControlCoordinatesArr: [] });\n    let allcontrolCoordinates = [],\n      allControls = [];\n    this.setState({ selectedControlArr: [] });\n    if (steps !== null) {\n      steps.map((control, index) => {\n        allcontrolCoordinates.push(control.bounds);\n        allControls.push(control);\n        return null;\n      });\n    }\n    this.setState({ selectedControlCoordinatesArr: allcontrolCoordinates });\n    this.setState({ selectedControlArr: allControls });\n  };\n\n  onControlSelect = (control, isFromImage) => {\n    if (control === null) {\n      this.setState({ selectedControlCoordinatesArr: [] });\n    } else {\n      var x = control.bounds.x;\n      var y = control.bounds.y;\n      var w = control.bounds.w;\n      var h = control.bounds.h;\n      this.setState({ x1: x });\n      this.setState({ y1: y });\n      this.setState({ w1: w });\n      this.setState({ h1: h });\n      this.setState({ id: control.id });\n      this.setState({ type: control.type });\n      this.setState({ content: control.content });\n      this.setState({ confidence: control.confidence });\n      //window.location.reload();\n      if (this.state.selectedControlCoordinatesArr.length > 0 && !isFromImage) {\n        this.setState({\n          selectedControlCoordinatesArr: [...this.state.selectedControlCoordinatesArr, control.bounds],\n        });\n      } else {\n        this.setState({\n          selectedControlCoordinatesArr: [control.bounds],\n        });\n      }\n    }\n  };\n  handleControlnameChange = (event) => {\n    this.setState({\n      controlname: event.target.value,\n    });\n  };\n  handleContentChange = (event) => {\n    this.setState({\n      content: event.target.value,\n    });\n  };\n  handleConfidenceChange = (event) => {\n    this.setState({\n      confidence: event.target.value,\n    });\n  };\n  handleX_CordinateChange = (event) => {\n    this.setState({\n      x1: event.target.value,\n    });\n  };\n  handleY_CordinateChange = (event) => {\n    this.setState({\n      y1: event.target.value,\n    });\n  };\n  handleW_CordinateChange = (event) => {\n    this.setState({\n      w1: event.target.value,\n    });\n  };\n  handleH_CordinateChange = (event) => {\n    this.setState({\n      h1: event.target.value,\n    });\n  };\n  setControlName = (event) => {\n    this.setState({\n      name: event.target.value,\n    });\n  };\n\n  setControlSteps = (steps) => {\n    this.setState({\n      controlSteps: steps,\n    });\n  };\n\n  setThumbnails = (data) => {\n    this.setState({\n      idThumbs: data\n    });\n  };\n\n  setSimilar = (value) => {\n    this.setState({ isSimilarControl: value });\n  };\n\n  setAppState = () => {\n    this.props.setDesignStatetoparent(true);\n  };\n\n  setEnableCrop = (value) => {\n    this.setState({addControl : value})\n  }\n\n  setOnhoverCoordinates = (coordinates) => {\n    if(coordinates !== null) {\n      this.setState({onHoverControlCoordinates : { x : coordinates.x, y: coordinates.y, w : coordinates.w, h : coordinates.h}})\n    } else {\n      this.setState({onHoverControlCoordinates : { x : 0, y: 0, w : 0, h : 0}})\n    }\n  }\n\n  filterSelection = (selectionId) => {\n    let imagesIndx = this.state.thumbnailImages.filter((item) => {\n       return Object.keys(item)[0] !== selectionId\n    });\n    let imageIdsIndx = this.state.idThumbs.filter((item) => {\n      return item.id !== selectionId\n    });\n    this.setState({\n      thumbnailImages : [],\n      thumbnailImages : imagesIndx,\n      idThumbs : imageIdsIndx,\n    })\n    let idArr = [];\n    imageIdsIndx.map((imageStatus) => {\n      idArr.push(imageStatus.id);\n      this.requestImages(imageStatus.id);\n    });\n    this.setState({\n      ids: idArr\n    });\n    if(imageIdsIndx.length === 0) {\n      this.props.setDesignStatetoparent(false);\n    } else {\n      this.onImgSelection(imageIdsIndx[0].id);\n    }\n  }\n\n  clearAll = () => {\n    this.clearControls.current.clearAllfromParent();\n  };\n\n  refreshControlLabels = () => {\n    this.clearControls.current.getControls();\n  }\n\n  setImageObjArr = (imageArr) => {\n    this.setState({\n      thumbnailImages: imageArr\n    });\n  }\n\n  setRegionFrom = (region) => {\n    this.setEnableCrop(true);\n    this.setState({\n      selectRegionFrom : region\n    })\n  }\n\n  setDragComplete = (value) => {\n    this.setState({\n      dragComplete : value\n    })\n  }\n\n  onKeyPressForAccessible = (e) => {\n      if(e.key === \"Enter\"){\n        console.log(e);\n        e.target.click();\n      }\n  }\n\n  render() {\n    let viewerClass =\n      \"vc-viewer\";\n      const valueTemplate = (value) => {\n        let completedImages = value * this.state.totalImages;\n        completedImages = Math.round(completedImages / 100);\n        return (\n          <>\n            {completedImages} / <b> {this.state.totalImages} completed</b>\n          </>\n        )\n      };\n    if (this.state.idThumbs.length === 0) {\n      return (\n        <div className=\"card imageprocessCard\">\n          {\n            this.state.processedImagesLength === 0 ? (\n              <div className=\"ac-pb\">\n                <div className=\"ac-pb-text\">{i18n.t('device-viewer.loader')}</div>\n                <div className=\"ac-pb-container\">\n                  <div className=\"ac-pb-content\" /></div>\n              </div>\n            ) : (\n              <ProgressBar value={this.state.processedImagesLength} displayValueTemplate={valueTemplate}></ProgressBar>\n            )\n          }\n            \n        </div>\n      );\n    }\n    return (\n      <div className=\"vc\">\n        <Toast ref={this.toastRef} />\n        <div className=\"backLink\">\n          <i className=\"pi pi-arrow-left home-icon\" onClick={this.setAppState}\n          tabIndex = {0}\n          onKeyDown={(e) => this.onKeyPressForAccessible(e)}></i> \n          <span className=\"app-name\">{this.props.appName}</span> (<span>{this.state.selectedImageName.trim()}</span>)\n        </div>\n        <div className=\"vc-container\">\n            <DeviceToolBar\n                selection={this.state.selectedId}\n                onNewSelection={this.onImgSelection}\n                ids={this.state.ids}\n                appId={this.props.appId}\n                thumbnailImages = { this.state.thumbnailImages }\n                filterSelection = {this.filterSelection}\n                imageids = {this.state.idThumbs}\n                setImageObjArr = {this.setImageObjArr}\n                selectedImageName = {this.state.selectedImageName}\n                onKeyPressForAccessible = {this.onKeyPressForAccessible}\n                imageFocusPoint = {this.state.imageFocusPoint}\n              />\n            <div className=\"vc-content\">\n                <div className={viewerClass}>\n                  <DeviceViewer\n                    visibility={this.state.viewerVisibility}\n                    actionProcessing={this.state.actionProcessing}\n                    onIncomingScreenshot={this.onIncomingScreenshot}\n                    onControlSelect={this.onControlSelect}\n                    selection={this.state.selectedId}\n                    selectedControlCoordinatesArr = {this.state.selectedControlCoordinatesArr}\n                    updateParentControlState={this.updateStateArr}\n                    getcontrolname={this.state.type}\n                    getcontent={this.state.content}\n                    getconfidence={this.state.confidence}\n                    getx={this.state.x1}\n                    gety={this.state.y1}\n                    getw={this.state.w1}\n                    geth={this.state.h1}\n                    id={this.state.id}\n                    handleControlnameChange={this.handleControlnameChange}\n                    handleContentChange={this.handleContentChange}\n                    handleConfidenceChange={this.handleConfidenceChange}\n                    handleX_CordinateChange={this.handleX_CordinateChange}\n                    handleY_CordinateChange={this.handleY_CordinateChange}\n                    handleW_CordinateChange={this.handleW_CordinateChange}\n                    handleH_CordinateChange={this.handleH_CordinateChange}\n                    setControlName={this.setControlName}\n                    isSimilarControl={this.state.isSimilarControl}\n                    appId={this.props.appId}\n                    controlSteps={this.state.controlSteps}\n                    thumbnailImages = { this.state.thumbnailImages }\n                    setEnableCrop = {this.setEnableCrop}\n                    addControl = {this.state.addControl}\n                    setControlSteps = {this.setControlSteps}\n                    clearAllControls = {this.clearAll}\n                    setOnhoverCoordinates = {this.setOnhoverCoordinates}\n                    onHoverControlCoordinates = {this.state.onHoverControlCoordinates}\n                    onAllControlSelection = {this.onAllControlSelection}\n                    onNewSelection={this.onImgSelection}\n                    selectRegionFrom = {this.state.selectRegionFrom}\n                    setRegionFrom = {this.setRegionFrom}\n                    enableRegionFeature = {this.enableRegionFeature}\n                    setDragComplete = {this.setDragComplete}\n                    dragComplete = {this.state.dragComplete}\n                    refreshControlLabels = {this.refreshControlLabels}\n                  />\n                </div>\n          </div>\n          <Controls\n            onMinimize={this.onTestStepsMinimize}\n            selection={this.state.selectedId}\n            onControlSelect={this.onControlSelect}\n            onAllControlSelection={this.onAllControlSelection}\n            getcontrolname={this.state.type}\n            getcontent={this.state.content}\n            getconfidence={this.state.confidence}\n            getx={this.state.x1}\n            gety={this.state.y1}\n            getw={this.state.w1}\n            geth={this.state.h1}\n            id={this.state.id}\n            handleControlnameChange={this.handleControlnameChange}\n            handleContentChange={this.handleContentChange}\n            handleConfidenceChange={this.handleConfidenceChange}\n            handleX_CordinateChange={this.handleX_CordinateChange}\n            handleY_CordinateChange={this.handleY_CordinateChange}\n            handleW_CordinateChange={this.handleW_CordinateChange}\n            handleH_CordinateChange={this.handleH_CordinateChange}\n            setControlName={this.setControlName}\n            setSwitch={this.setSwitch}\n            parentSelectedControlArrState={this.state.selectedControlArr}\n            setSimilar={this.setSimilar}\n            appId={this.props.appId}\n            setControlSteps={this.setControlSteps}\n            setEnableCrop = {this.setEnableCrop}\n            ref={this.clearControls}\n            setOnhoverCoordinates = {this.setOnhoverCoordinates}\n            selectRegionFrom = {this.state.selectRegionFrom}\n            setRegionFrom = {this.setRegionFrom}\n            enableRegionFeature = {this.enableRegionFeature}\n            onKeyPressForAccessible = {e => this.onKeyPressForAccessible(e)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VirtualClient;\n"],"sourceRoot":""}